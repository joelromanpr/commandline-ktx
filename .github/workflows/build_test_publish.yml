name: Build, Test, and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # This job runs on every push and PR to build and test the code
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and run tests
        run: ./gradlew build
      - name: Upload Test Reports
        if: always() # Always run this step, even if the build fails
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: test-reports
          path: '**/build/reports/tests/test'

  # This job publishes either a SNAPSHOT or a RELEASE version based on the version string
  publish:
    runs-on: ubuntu-latest
    needs: build_and_test # This job depends on the build_and_test job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read # Changed from write, as release creation is removed
    environment: commandline-ktx # Added environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract Version and Type
        id: extract_version_info
        run: |
          VERSION=$(grep 'version =' build.gradle.kts | grep -o "'.*'" | sed "s/'//g")
          if [ -z "$VERSION" ]; then
            VERSION=$(grep 'version =' library/build.gradle.kts | grep -o "'.*'" | sed "s/'//g")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *"-SNAPSHOT"* ]]; then
            echo "is_snapshot=true" >> $GITHUB_OUTPUT
          else
            echo "is_snapshot=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish Release to Maven Central
        if: steps.extract_version_info.outputs.is_snapshot == 'false'
        run: ./gradlew :library:publishAndReleaseToMavenCentral --no-daemon --warning-mode all --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: Publish Snapshot to Maven Central
        if: steps.extract_version_info.outputs.is_snapshot == 'true'
        run: ./gradlew :library:publishMavenPublicationToMavenCentralRepository --no-daemon --warning-mode all --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

